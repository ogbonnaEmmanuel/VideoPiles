{"version":3,"sources":["components/Logo/logo.js","components/Nav/nav.js","components/Hero/hero.js","components/ProcessUpload/search_bar.js","components/ProcessUpload/utils.js","components/ProcessUpload/error_modal.js","components/ProcessUpload/upload_bar.js","components/ProcessUpload/middle_bar.js","components/ProcessUpload/upload.js","App.js","components/reducers/root_reducer.js","reportWebVitals.js","index.js"],"names":["Logo","className","id","this","props","logo_id","React","Component","Nav","Hero","SearchBar","handleVideoPileInput","e","value","target","update_pile_input","type","onKeyUp","placeholder","connect","dispatch","pile_input","video_type_required","mp4","mpeg4","error_type","error_msg","file_size_error","invalid_video_error","invalid_pile_error","empty_pile_error","VALIDATE_VIDEO","video_type","video_size","file_size","Math","round","split","VALIDATE_VIDEO_TYPE","VALIDATE_PILE_INPUT","ErrorModal","CloseErrorModal","close_error_modal","counter_id","document","getElementById","counter","count_interval","setInterval","textContent","clearInterval","window","location","reload","state","error_state","message","override","css","UploadBar","processAnimation","process_type","upload_icon","download_icon","style","display","setState","loading","handleFile","video_file","querySelector","files","user_video_type","user_video_size","size","video_validate_status","open_error_modal","upload_feedback","formData","FormData","append","fetch","method","body","then","response","json","result","zip_file_path","console","log","catch","error","DownloadVideo","blob","downloadUrl","URL","createObjectURL","Blob","link","createElement","href","setAttribute","appendChild","click","parentNode","removeChild","bind","htmlFor","onClick","accept","onChange","color","open","MiddleBar","Upload","App","initState","RootReducer","action","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.77ba2370.chunk.js","sourcesContent":["import React from 'react';\r\nimport './logo.css';\r\n\r\nclass Logo extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main_logo\" id={this.props.logo_id}>\r\n                <p>VIDEOPILE</p>\r\n                <p className=\"material-icons icon_play\">play_circle_filled</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Logo","import React from 'react';\r\nimport './nav.css';\r\nimport Logo from \"../Logo/logo\";\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <nav>\r\n            <div id=\"logo\">\r\n                <Logo logo_id={'logo_img'}/>\r\n            </div>\r\n            <div id=\"pile_log\">\r\n                <div id=\"pile_container\">\r\n                    <div className=\"pile\" id=\"first_pile\"/>\r\n                    <div className=\"pile\" id=\"second_pile\"/>\r\n                    <div className=\"pile\" id=\"third_pile\"/>\r\n                    <div className=\"pile\" id=\"fourth_pile\"/>\r\n                    <div className=\"pile\" id=\"fifth_pile\"/>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nexport default Nav","import React from 'react';\r\nimport './hero.css';\r\nimport Logo from \"../Logo/logo\";\r\n\r\n\r\nconst Hero = () => {\r\n    return (\r\n        <div id=\"hero\">\r\n            <div id=\"hero_container\">\r\n                <div id=\"logo_aligner\">\r\n                    <Logo logo_id={\"hero_logo\"}/>\r\n                </div>\r\n                <p id=\"hero_text\">CUT YOUR LONG VIDEOS INTO PILES</p>\r\n                <div id=\"bar_guide\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Hero","import React from 'react';\r\nimport './search_bar.css';\r\nimport {connect} from 'react-redux';\r\n\r\nclass SearchBar extends React.Component {\r\n    handleVideoPileInput = (e) => {\r\n        let value = e.target.value;\r\n        this.props.update_pile_input(value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"search_bar\">\r\n                <form id=\"search_form\">\r\n                    <input type=\"number\" id=\"search_area\" onKeyUp={this.handleVideoPileInput}\r\n                           placeholder=\"INPUT THE NUMBER OF PILES\"/>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        update_pile_input: (pile_input) => dispatch({\r\n            type: 'pile_input',\r\n            pile_input\r\n        })\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps)(SearchBar)","const maximum_file_size = 5;\r\nconst video_type_required = {mp4: 'mp4', mpeg4: 'mpeg4'};\r\nconst maximum_pile = 5;\r\nlet error_type = '';\r\n\r\nconst error_msg = {\r\n    file_size_error: `file size is greater than ${maximum_file_size}mb`,\r\n    invalid_video_error: 'video type not supported',\r\n    invalid_pile_error: `pile number is greater than ${maximum_pile}`,\r\n    empty_pile_error:'please fill in pile number',\r\n}\r\n\r\nconst CALCULATE_FILE_SIZE = (file_size => {\r\n    let user_file_size = Math.round(file_size / (1024 * 1024));\r\n    if (user_file_size > maximum_file_size) {\r\n        error_type = error_msg.file_size_error;\r\n    }\r\n})\r\n\r\n\r\nconst VALIDATE_VIDEO_TYPE = ((video_type) => {\r\n    let user_video_type = video_type.split('/')[1];\r\n    if (!(user_video_type in video_type_required)) {\r\n        error_type = error_msg.invalid_video_error;\r\n    }\r\n})\r\n\r\nconst VALIDATE_PILE_INPUT = (pile_input) =>{\r\n    if(pile_input > maximum_pile){\r\n        error_type = error_msg.invalid_pile_error;\r\n    }else if(pile_input === ''){\r\n        error_type = error_msg.empty_pile_error;\r\n    }\r\n}\r\n\r\nexport const VALIDATE_VIDEO = (video_type, video_size,pile_input) => {\r\n    CALCULATE_FILE_SIZE(video_size);\r\n    VALIDATE_VIDEO_TYPE(video_type);\r\n    VALIDATE_PILE_INPUT(pile_input);\r\n    return error_type;\r\n}","import React from \"react\";\r\nimport './error_modal.css';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nclass ErrorModal extends React.Component {\r\n    CloseErrorModal = ()=>{\r\n        this.props.close_error_modal(false,'');\r\n    }\r\n    componentDidMount() {\r\n        let counter_id = document.getElementById('error_counter');\r\n        let counter = 0;\r\n        let count_interval = setInterval(()=>{\r\n            counter += 1;\r\n            counter_id.textContent = counter\r\n            if(counter === 5){\r\n                clearInterval(count_interval);\r\n                window.location.reload(false);\r\n            }\r\n        },1000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"myModal\" className=\"error_modal\">\r\n                <div className=\"error_container\">\r\n                    <div className=\"error_content\">\r\n                        <p className=\"material-icons center_element error_icon\">\r\n                            warning\r\n                        </p>\r\n                        <p className=\"center_element\" id=\"snap_text\">\r\n                            oh snap!\r\n                        </p>\r\n                        <p className=\"center_element\" id=\"error_text\">\r\n                            {this.props.error_msg}\r\n                        </p>\r\n                        <div className=\"dismiss_counter_container\">\r\n                            <div className=\"dismiss_counter\">\r\n                                <p id=\"error_counter\">0</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        error_msg: state.error_state.message\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch =>{\r\n   return {\r\n    close_error_modal:(error_state,error_msg)=>{dispatch({\r\n        type:'error_state',\r\n        error_state,\r\n        error_msg\r\n    })}\r\n   }\r\n})\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ErrorModal)","import React from 'react';\r\nimport {css} from \"@emotion/core\";\r\nimport {HashLoader} from \"react-spinners\";\r\nimport './upload_bar.css';\r\nimport {VALIDATE_VIDEO} from \"./utils\";\r\nimport {connect} from 'react-redux';\r\nimport ErrorModal from \"./error_modal\";\r\n\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin-top: 10px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nclass UploadBar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleFile = this.handleFile.bind(props);\r\n        this.processAnimation = this.processAnimation.bind(props);\r\n        this.state = {\r\n            loading: false,\r\n            zip_file_path: \"\",\r\n            upload_feedback: 'UPLOAD YOUR VIDEO'\r\n        }\r\n    }\r\n\r\n    processAnimation = (process_type) => {\r\n        let upload_icon = document.getElementById('file_label');\r\n        let download_icon = document.getElementById('download_icon');\r\n        if (process_type === true) {\r\n            upload_icon.style.display = 'none';\r\n            this.setState({loading: true})\r\n        } else {\r\n            upload_icon.style.display = 'none';\r\n            this.setState({loading: false});\r\n            download_icon.style.display = 'block';\r\n        }\r\n    }\r\n    handleFile = () => {\r\n        const userFile = document.querySelector('input[type=\"file\"]');\r\n        let video_file = userFile.files[0];\r\n        let user_video_type = video_file.type\r\n        let user_video_size = video_file.size;\r\n        let pile_input = this.props.pile_input;\r\n        let video_validate_status = VALIDATE_VIDEO(user_video_type, user_video_size, pile_input);\r\n        this.processAnimation(true);\r\n        if (video_validate_status) {\r\n            this.props.open_error_modal(true, video_validate_status);\r\n        } else {\r\n            this.setState({upload_feedback: 'processing video...'})\r\n            const formData = new FormData();\r\n            formData.append('max_division', pile_input);\r\n            formData.append('video_file', video_file);\r\n            fetch('/process_video/', {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n                .then(response => response.json())\r\n                .then(result => {\r\n                    this.processAnimation(false);\r\n                    this.setState(\r\n                        {\r\n                            zip_file_path: result['file_path'],\r\n                            upload_feedback: 'download your video',\r\n                        });\r\n                    console.log(result);\r\n                })\r\n                .catch(error => {\r\n                    this.processAnimation(false);\r\n                    let msg = 'Unable to edit video';\r\n                    this.props.open_error_modal(true, msg);\r\n                });\r\n        }\r\n    }\r\n\r\n    DownloadVideo = () => {\r\n        let zip_file_path = this.state.zip_file_path;\r\n        const formData = new FormData();\r\n        this.setState({upload_feedback: 'Processing request...'})\r\n        formData.append('zip_file_path', zip_file_path);\r\n        fetch('/download/', {\r\n            method: 'POST',\r\n            body: formData\r\n        }).then(response => {\r\n            response.blob().then(blob => {\r\n                const downloadUrl = window.URL.createObjectURL(new Blob([blob]));\r\n                const link = document.createElement('a');\r\n                link.href = downloadUrl;\r\n                link.setAttribute('download', 'user_video.zip');\r\n                document.body.appendChild(link);\r\n                link.click();\r\n                link.parentNode.removeChild(link);\r\n                window.location.reload(false);\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id=\"upload_border\">\r\n                    <div id=\"upload_process\">\r\n                        <p id=\"upload_feedback\" className=\"center_element\">\r\n                            {this.state.upload_feedback}\r\n                        </p>\r\n                        <label htmlFor=\"file\" id=\"file_label\">\r\n                            <span className=\"material-icons center_element process_icon\"\r\n                                  id=\"folder_icon\">\r\n                                            folder_open\r\n                            </span>\r\n                        </label>\r\n                        <p className=\"material-icons center_element process_icon\"\r\n                           id=\"download_icon\" onClick={this.DownloadVideo}>\r\n                            cloud_download\r\n                        </p>\r\n                        <form id=\"video_form\">\r\n                            <input type=\"file\" id=\"file\" accept=\".mp4\"\r\n                                   onChange={this.handleFile}/>\r\n                        </form>\r\n                        <div className=\"center_element\">\r\n                            <HashLoader\r\n                                css={override}\r\n                                size={90}\r\n                                color={\"#fff\"}\r\n                                loading={this.state.loading}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.props.error_state ? <ErrorModal/> : ''}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        error_state: state.error_state.open,\r\n        pile_input: state.pile_input,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        open_error_modal: (error_state, error_msg) => dispatch({\r\n            type: 'error_state',\r\n            error_state,\r\n            error_msg\r\n        })\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UploadBar)","import React from 'react';\r\nimport './middle_bar.css';\r\nimport UploadBar from \"./upload_bar\";\r\n\r\nclass MiddleBar extends React.Component {\r\n    render() {\r\n        return (\r\n            <div id=\"middle_bar\">\r\n                <div id=\"upload_area\">\r\n                    <div className=\"rule_container\">\r\n                        <p className=\"rule_box\"/>\r\n                        <p className=\"rule_text\">max division (5) </p>\r\n                    </div>\r\n                    <div className=\"rule_container\">\r\n                        <p className=\"rule_box\"/>\r\n                        <p className=\"rule_text\">max file size 5mb</p>\r\n                    </div>\r\n                    <div className=\"rule_container\">\r\n                        <p className=\"rule_box\"/>\r\n                        <p className=\"rule_text\">file type (mp4,mpeg-4)</p>\r\n                    </div>\r\n                    <UploadBar/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MiddleBar","import React from 'react';\r\nimport './upload.css';\r\nimport SearchBar from \"./search_bar\";\r\nimport MiddleBar from \"./middle_bar\";\r\n\r\nclass Upload extends React.Component{\r\n    render() {\r\n        return(\r\n            <section id=\"upload_section\">\r\n                <div id=\"upload_border\">\r\n                    <SearchBar/>\r\n                    <MiddleBar/>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n\r\n}\r\nexport default Upload","import React from 'react';\nimport Nav from \"./components/Nav/nav\";\nimport Hero from \"./components/Hero/hero\";\nimport Upload from \"./components/ProcessUpload/upload\";\nfunction App() {\n  return (\n      <div>\n         <header>\n             <Nav/>\n             <Hero/>\n             <Upload/>\n         </header>\n      </div>\n  )\n}\n\nexport default App;\n","const initState = {\r\n    error_state : {\r\n        open:false,\r\n        message: ''\r\n    },\r\n    pile_input: '',\r\n}\r\n\r\nconst RootReducer = (state=initState,action)=>{\r\n    switch (action.type) {\r\n        case 'error_state':\r\n            let error_state = state.error_state;\r\n            error_state.open = action.error_state;\r\n            error_state.message = action.error_msg;\r\n            return {\r\n                ...state,\r\n                error_state\r\n            }\r\n        case 'pile_input':\r\n            let pile_input = action.pile_input\r\n            return {\r\n                ...state,\r\n                pile_input\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default RootReducer","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {createStore} from \"redux\";\nimport {Provider} from 'react-redux';\nimport RootReducer from \"./components/reducers/root_reducer\";\nimport reportWebVitals from './reportWebVitals';\n\nconst store = createStore(RootReducer);\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}><App/></Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}